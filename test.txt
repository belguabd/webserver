ranges

// Use set instead of vector

cgi 

headers


delete status code 
delete response 



\\
log._allowed_methods.empty()===>set default


upload_store /goinfre/ataoufik/ss/uplo ad////; 

cgi_extension .phep .py; parse
 allowed_methods  POST DELETE;
.php .py 

headers parse
    host
    connection : close
    POS4 / HTTP/1.1
    Connection: keep-alive
    content-length  
method_allowed delete; 

location upload
close and keep-alive




ERROR
localhost:8585 send request and disconnected client 
localhost:8585/e  send request but location doesn't exist
when send request using browser , cgi doesn't work because ,it send request has keep-alive
browser send request for favorite icon but server exit 0 and display message `CGI not supported type file`



server_name--->response

upload_store /goinfre/ataoufik/ss/upload; #if (upla.back != '/') up.pushBack('/')
# index index.phwp index.epy index.html; if index.empty()--->location/index.php


listen 8080; server socket

http://localhost:8080/add/other/index.php

emagueri:
    keyVal to cgi

    HTTP/1.1 413 Request Entity Too Large
    
    check the value of each field line Name that will be used
    parse HOST and every headers work on it
    set the connection to keep-alive by default if doesn't exit
























AddressSanitizer:DEADLYSIGNAL
=================================================================
==85404==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000100a6dde3 bp 0x7ffeef229190 sp 0x7ffeef229160 T0)
==85404==The signal is caused by a READ memory access.
==85404==Hint: address points to the zero page
    #0 0x100a6dde3 in Post::getFileName()+0x63 (webserver:x86_64+0x1000a0de3)
    #1 0x1009ec33d in HttpRequest::getFileName()+0x4d (webserver:x86_64+0x10001f33d)
    #2 0x1009ebed0 in WebServer::cleanupClientConnection(HttpRequest*, HttpResponse*, std::__1::__wrap_iter<HttpRequest**>, std::__1::__wrap_iter<HttpResponse**>)+0xa10 (webserver:x86_64+0x10001eed0)
    #3 0x1009ee464 in WebServer::respond_to_client(int)+0xaf4 (webserver:x86_64+0x100021464)
    #4 0x1009fa4da in WebServer::run()+0x24aa (webserver:x86_64+0x10002d4da)
    #5 0x1009cf6f7 in main+0x297 (webserver:x86_64+0x1000026f7)
    #6 0x7fff6eec2cc8 in start+0x0 (libdyld.dylib:x86_64+0x1acc8)